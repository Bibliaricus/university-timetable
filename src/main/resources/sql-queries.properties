create.faculty = INSERT INTO faculties (name) VALUES (?)
find.all.faculties = SELECT * FROM faculties
find.faculty.by.id = SELECT * FROM faculties WHERE id = ?
update.faculty = UPDATE faculties SET name = ? WHERE id = ?
delete.faculty = DELETE FROM faculties WHERE id = ?

create.group = INSERT INTO groups (name) VALUES (?)
find.all.groups = SELECT id, name FROM groups 
find.group.by.id = SELECT id, name FROM groups WHERE id = ?
update.group = UPDATE groups SET name = ? WHERE id = ?
delete.group = DELETE FROM groups WHERE id = ?
set.group.faculty = UPDATE groups SET faculty_id = COALESCE(?, faculty_id) WHERE id = ?
get.group.faculty = SELECT g.faculty_id AS id, f.name AS name \
	FROM groups AS g LEFT JOIN faculties AS f ON g.faculty_id = f.id WHERE g.id = ? 

create.person = INSERT INTO people (role, first_name, last_name, gender, phone_number, email) \
    VALUES (? :: role, ?, ?, ? :: gender, ?, ?)
find.all.people.by.role = SELECT id, first_name, last_name, gender, phone_number, email  \
    FROM people WHERE role = ? :: role
find.person.by.id = SELECT id, first_name, last_name, gender, phone_number, email \
    FROM people WHERE id = ? AND role = ? :: role
update.person = UPDATE people SET first_name = ?, last_name = ?, gender = ? :: gender, \
    phone_number = COALESCE(?, phone_number), email = COALESCE(?, email) \
    WHERE id = ? AND role = ? :: role
delete.person = DELETE FROM people WHERE id = ? AND role = ? :: role

set.student.group = UPDATE people SET student_group_id = COALESCE(?, student_group_id) WHERE id = ?
get.student.group = SELECT p.student_group_id AS id, g.name AS name \
	FROM people AS p LEFT JOIN groups AS g ON p.student_group_id = g.id WHERE p.id = ?

create.lesson.time = INSERT INTO lesson_times (start_time, end_time) VALUES (?, ?)
find.all.lesson.times = SELECT * FROM lesson_times
find.lesson.time.by.id = SELECT * FROM lesson_times WHERE id = ?
update.lesson.time = UPDATE lesson_times SET start_time = ?, end_time = ? WHERE id = ?
delete.lesson.time.by.id = DELETE FROM lesson_times WHERE id = ?

create.lesson = INSERT INTO lessons (name, audience, week_day) \
    VALUES (?, ?, ? :: week_day)
find.all.lessons = SELECT id, name, audience, week_day FROM lessons
find.lesson.by.id = SELECT id, name, audience, week_day FROM lessons WHERE id = ?
update.lesson = UPDATE lessons SET name = ?, audience = ?, week_day = ? :: week_day WHERE id = ?
delete.lesson = DELETE FROM lessons WHERE id = ?

set.lesson.lecturer = UPDATE lessons SET lecturer_id = COALESCE(?, lecturer_id) WHERE id = ?
get.lesson.lecturer = SELECT l.lecturer_id AS id, p.first_name AS first_name, p.last_name AS last_name, \
	p.gender AS gender, p.phone_number AS phone_number, p.email AS email \
	FROM lessons AS l LEFT JOIN people AS p ON l.lecturer_id = p.id WHERE l.id = ?
	
set.lesson.group = UPDATE lessons SET group_id = COALESCE(?, group_id) WHERE id = ?
get.lesson.group = SELECT l.group_id AS id, g.name AS name FROM lessons AS l \
	LEFT JOIN groups AS g ON l.group_id = g.id WHERE l.id = ?
	
set.lesson.time = UPDATE lessons SET lesson_time_id = COALESCE(?, lesson_time_id) WHERE id = ?
get.lesson.time = SELECT l.lesson_time_id AS id, t.start_time AS start_time, t.end_time AS end_time \
	FROM lessons AS l LEFT JOIN lesson_times AS t ON l.lesson_time_id = t.id WHERE l.id = ?

get.day.lessons.for.group = SELECT id , name, audience, week_day FROM lessons \
    WHERE group_id = ? AND week_day = ? :: week_day
get.day.lessons.for.lecturer = SELECT id, name, audience, week_day \
    FROM lessons WHERE lecturer_id = ? AND week_day = ? :: week_day